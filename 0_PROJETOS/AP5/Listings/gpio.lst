


ARM Macro Assembler    Page 1 


    1 00000000         ; gpio.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Uso de GPIO com interrupção ...
    4 00000000         ; Prof. Guilherme de S. Peron - 12/03/2018
    5 00000000         ; Prof. Marcos E. P. Monteiro - 12/03/2018
    6 00000000         ; Prof. DaLuz             - 25/02/2022
    7 00000000         
    8 00000000         ;#######################################################
                       #########################
    9 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   10 00000000         ;#######################################################
                       #########################
   11 00000000         ; Definições de Valores
   12 00000000 00000001 
                       BIT0    EQU              2_0001
   13 00000000 00000002 
                       BIT1    EQU              2_0010
   14 00000000         ; Definições dos Registradores Gerais
   15 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   16 00000000 400FEA08 
                       SYSCTL_PRGPIO_R
                               EQU              0x400FEA08
   17 00000000         ; NVIC
   18 00000000 E000E104 
                       NVIC_EN1_R
                               EQU              0xE000E104
   19 00000000 E000E430 
                       NVIC_PRI12_R
                               EQU              0xE000E430
   20 00000000         ; Definições dos Ports - PORT J
   21 00000000 40060404 
                       GPIO_PORTJ_AHB_IS_R
                               EQU              0x40060404
   22 00000000 40060408 
                       GPIO_PORTJ_AHB_IBE_R
                               EQU              0x40060408
   23 00000000 4006040C 
                       GPIO_PORTJ_AHB_IEV_R
                               EQU              0x4006040C
   24 00000000 40060410 
                       GPIO_PORTJ_AHB_IM_R
                               EQU              0x40060410
   25 00000000 40060414 
                       GPIO_PORTJ_AHB_RIS_R
                               EQU              0x40060414
   26 00000000 4006041C 
                       GPIO_PORTJ_AHB_ICR_R
                               EQU              0x4006041C
   27 00000000 40060520 
                       GPIO_PORTJ_AHB_LOCK_R
                               EQU              0x40060520
   28 00000000 40060524 
                       GPIO_PORTJ_AHB_CR_R
                               EQU              0x40060524
   29 00000000 40060528 
                       GPIO_PORTJ_AHB_AMSEL_R



ARM Macro Assembler    Page 2 


                               EQU              0x40060528
   30 00000000 4006052C 
                       GPIO_PORTJ_AHB_PCTL_R
                               EQU              0x4006052C
   31 00000000 40060400 
                       GPIO_PORTJ_AHB_DIR_R
                               EQU              0x40060400
   32 00000000 40060420 
                       GPIO_PORTJ_AHB_AFSEL_R
                               EQU              0x40060420
   33 00000000 4006051C 
                       GPIO_PORTJ_AHB_DEN_R
                               EQU              0x4006051C
   34 00000000 40060510 
                       GPIO_PORTJ_AHB_PUR_R
                               EQU              0x40060510
   35 00000000 400603FC 
                       GPIO_PORTJ_AHB_DATA_R
                               EQU              0x400603FC
   36 00000000 40060000 
                       GPIO_PORTJ_AHB_DATA_BITS_R
                               EQU              0x40060000
   37 00000000 00000100 
                       GPIO_PORTJ
                               EQU              2_000000100000000
   38 00000000         ; PORT N
   39 00000000 40064520 
                       GPIO_PORTN_AHB_LOCK_R
                               EQU              0x40064520
   40 00000000 40064524 
                       GPIO_PORTN_AHB_CR_R
                               EQU              0x40064524
   41 00000000 40064528 
                       GPIO_PORTN_AHB_AMSEL_R
                               EQU              0x40064528
   42 00000000 4006452C 
                       GPIO_PORTN_AHB_PCTL_R
                               EQU              0x4006452C
   43 00000000 40064400 
                       GPIO_PORTN_AHB_DIR_R
                               EQU              0x40064400
   44 00000000 40064420 
                       GPIO_PORTN_AHB_AFSEL_R
                               EQU              0x40064420
   45 00000000 4006451C 
                       GPIO_PORTN_AHB_DEN_R
                               EQU              0x4006451C
   46 00000000 40064510 
                       GPIO_PORTN_AHB_PUR_R
                               EQU              0x40064510
   47 00000000 400643FC 
                       GPIO_PORTN_AHB_DATA_R
                               EQU              0x400643FC
   48 00000000 40064000 
                       GPIO_PORTN_AHB_DATA_BITS_R
                               EQU              0x40064000
   49 00000000 00001000 
                       GPIO_PORTN
                               EQU              2_001000000000000



ARM Macro Assembler    Page 3 


   50 00000000         
   51 00000000 4003200C 
                       TIMER2_CTL_R
                               EQU              0x4003200C
   52 00000000 4003000C 
                       TIMER0_CTL_R
                               EQU              0x4003000C
   53 00000000         
   54 00000000         ;#######################################################
                       #########################
   55 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   56 00000000         ;                  código
   57 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   58 00000000         
   59 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   60 00000000                 EXPORT           GPIO_Init   ;Permite chamar GPI
                                                            O_Init de outro arq
                                                            uivo
   61 00000000                 EXPORT           PortN_Output ;Permite chamar Po
                                                            rtN_Output de outro
                                                             arquivo
   62 00000000                 EXPORT           PortJ_Input ;Permite chamar Por
                                                            tJ_Input de outro a
                                                            rquivo
   63 00000000                 EXPORT           PortN_Invertepino0 ;Permite cha
                                                            mar PortN_Invertepi
                                                            no0 de outro arquiv
                                                            o
   64 00000000                 EXPORT           PortN_Invertepino1
   65 00000000         
   66 00000000                 EXPORT           GPIOPortJ_Handler
   67 00000000                 IMPORT           EnableInterrupts
   68 00000000                 IMPORT           DisableInterrupts
   69 00000000         
   70 00000000         ;#######################################################
                       #########################
   71 00000000         ; Função GPIO_Init
   72 00000000         ; Parâmetro de entrada: Não tem
   73 00000000         ; Parâmetro de saída: Não tem
   74 00000000         ;#######################################################
                       #########################
   75 00000000         GPIO_Init
   76 00000000         ; 1. Ativar o clock para a porta setando o bit correspon
                       dente no registrador RCGCGPIO,
   77 00000000         ; após isso verificar no PRGPIO se a porta está pronta p
                       ara uso.
   78 00000000         ; enable clock to GPIOF at clock gating register
   79 00000000 484A            LDR              R0, =SYSCTL_RCGCGPIO_R ;Carrega
                                                             o endereço do regi
                                                            strador RCGCGPIO
   80 00000002 F44F 5180       MOV              R1, #GPIO_PORTN ;Seta o bit da 
                                                            porta N
   81 00000006 F441 7180       ORR              R1, #GPIO_PORTJ ;Seta o bit da 
                                                            porta J, fazendo co
                                                            m OR
   82 0000000A 6001            STR              R1, [R0]    ;Move para a memóri



ARM Macro Assembler    Page 4 


                                                            a os bits das porta
                                                            s no endereço do RC
                                                            GCGPIO
   83 0000000C         
   84 0000000C 4848            LDR              R0, =SYSCTL_PRGPIO_R ;Carrega o
                                                             endereço do PRGPIO
                                                             para esperar os GP
                                                            IO ficarem prontos
   85 0000000E         EsperaGPIO
   86 0000000E 6801            LDR              R1, [R0]    ;Lê da memória o co
                                                            nteúdo do endereço 
                                                            do registrador
   87 00000010 F44F 5280       MOV              R2, #GPIO_PORTN ;Seta os bits c
                                                            orrespondentes às p
                                                            ortas para fazer a 
                                                            comparação
   88 00000014 F442 7280       ORR              R2, #GPIO_PORTJ ;Seta o bit da 
                                                            porta J, fazendo co
                                                            m OR
   89 00000018 4211            TST              R1, R2      ;Testa o R1 com R2 
                                                            fazendo R1 & R2
   90 0000001A D0F8            BEQ              EsperaGPIO  ;Se o flag Z=1, vol
                                                            ta para o laço. Sen
                                                            ão continua executa
                                                            ndo
   91 0000001C         ; 2. Limpar o AMSEL para desabilitar a analógica
   92 0000001C F04F 0100       MOV              R1, #0x00   ;Colocar 0 no regis
                                                            trador para desabil
                                                            itar a função analó
                                                            gica
   93 00000020 4844            LDR              R0, =GPIO_PORTJ_AHB_AMSEL_R ;Ca
                                                            rrega o R0 com o en
                                                            dereço do AMSEL par
                                                            a a porta J
   94 00000022 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor AMSEL da porta 
                                                            J da memória
   95 00000024 4844            LDR              R0, =GPIO_PORTN_AHB_AMSEL_R ;Ca
                                                            rrega o R0 com o en
                                                            dereço do AMSEL par
                                                            a a porta N
   96 00000026 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor AMSEL da porta 
                                                            N da memória
   97 00000028         ; 3. Limpar PCTL para selecionar o GPIO
   98 00000028 F04F 0100       MOV              R1, #0x00   ;Colocar 0 no regis
                                                            trador para selecio
                                                            nar o modo GPIO
   99 0000002C 4843            LDR              R0, =GPIO_PORTJ_AHB_PCTL_R ;Car
                                                            rega o R0 com o end
                                                            ereço do PCTL para 
                                                            a porta J
  100 0000002E 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor PCTL da porta J
                                                             da memória
  101 00000030 4843            LDR              R0, =GPIO_PORTN_AHB_PCTL_R ;Car
                                                            rega o R0 com o end
                                                            ereço do PCTL para 
                                                            a porta N



ARM Macro Assembler    Page 5 


  102 00000032 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor PCTL da porta N
                                                             da memória
  103 00000034         ; 4. DIR para 0 se for entrada, 1 se for saída
  104 00000034 4843            LDR              R0, =GPIO_PORTN_AHB_DIR_R ;Carr
                                                            ega o R0 com o ende
                                                            reço do DIR para a 
                                                            porta N
  105 00000036 F04F 0101       MOV              R1, #BIT0   ;PN1 & PN0 para LED
                                                            
  106 0000003A F041 0102       ORR              R1, #BIT1   ;Enviar o valor 0x0
                                                            3 para habilitar os
                                                             pinos como saída
  107 0000003E 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor
  108 00000040         ;O certo era verificar os outros bits da PJ para não tra
                       nsformar entradas em saídas desnecessárias
  109 00000040 4841            LDR              R0, =GPIO_PORTJ_AHB_DIR_R ;Carr
                                                            ega o R0 com o ende
                                                            reço do DIR para a 
                                                            porta J
  110 00000042 F04F 0100       MOV              R1, #0x00   ;Colocar 0 no regis
                                                            trador DIR para fun
                                                            cionar com saída
  111 00000046 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor PCTL da porta J
                                                             da memória
  112 00000048         ; 5. Limpar os bits AFSEL para 0 para selecionar GPIO 
  113 00000048         ;    Sem função alternativa
  114 00000048 F04F 0100       MOV              R1, #0x00   ;Colocar o valor 0 
                                                            para não setar funç
                                                            ão alternativa
  115 0000004C 483F            LDR              R0, =GPIO_PORTN_AHB_AFSEL_R ;Ca
                                                            rrega o endereço do
                                                             AFSEL da porta N
  116 0000004E 6001            STR              R1, [R0]    ;Escreve na porta
  117 00000050 483F            LDR              R0, =GPIO_PORTJ_AHB_AFSEL_R ;Ca
                                                            rrega o endereço do
                                                             AFSEL da porta J
  118 00000052 6001            STR              R1, [R0]    ;Escreve na porta
  119 00000054         ; 6. Setar os bits de DEN para habilitar I/O digital
  120 00000054 483F            LDR              R0, =GPIO_PORTN_AHB_DEN_R ;Carr
                                                            ega o endereço do D
                                                            EN
  121 00000056 6801            LDR              R1, [R0]    ;Ler da memória o r
                                                            egistrador GPIO_POR
                                                            TN_AHB_DEN_R
  122 00000058 F04F 0201       MOV              R2, #BIT0
  123 0000005C F042 0202       ORR              R2, #BIT1   ;Habilitar funciona
                                                            lidade digital na D
                                                            EN os bits 0 e 1
  124 00000060 EA41 0102       ORR              R1, R2
  125 00000064 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador da memória fun
                                                            cionalidade digital
                                                             
  126 00000066 483C            LDR              R0, =GPIO_PORTJ_AHB_DEN_R ;Carr
                                                            ega o endereço do D
                                                            EN



ARM Macro Assembler    Page 6 


  127 00000068 6801            LDR              R1, [R0]    ;Ler da memória o r
                                                            egistrador GPIO_POR
                                                            TN_AHB_DEN_R
  128 0000006A F04F 0201       MOV              R2, #BIT0
  129 0000006E F042 0202       ORR              R2, #BIT1   ;Habilitar funciona
                                                            lidade digital na D
                                                            EN os bits 0 e 1
  130 00000072 EA41 0102       ORR              R1, R2
  131 00000076 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador da memória fun
                                                            cionalidade digital
                                                            
  132 00000078         ; 7. Para habilitar resistor de pull-up interno, setar P
                       UR para 1
  133 00000078 4838            LDR              R0, =GPIO_PORTJ_AHB_PUR_R ;Carr
                                                            ega o endereço do P
                                                            UR para a porta J
  134 0000007A F04F 0101       MOV              R1, #BIT0   ;Habilitar funciona
                                                            lidade digital de r
                                                            esistor de pull-up 
                                                            
  135 0000007E F041 0102       ORR              R1, #BIT1   ;nos bits 0 e 1
  136 00000082 6001            STR              R1, [R0]
  137 00000084         
  138 00000084         ;Interrup??es
  139 00000084         ; 8. Desabilitar a interrup??o no registrador IM
  140 00000084 4836            LDR              R0, =GPIO_PORTJ_AHB_IM_R ;Carre
                                                            ga o endere?o do IM
                                                             para a porta J
  141 00000086 F04F 0100       MOV              R1, #2_00   ;Desabilitar as int
                                                            errup??es  
  142 0000008A 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador
  143 0000008C         ; 9. Configurar o tipo de interrup??o por borda no regis
                       trador IS
  144 0000008C 4835            LDR              R0, =GPIO_PORTJ_AHB_IS_R ;Carre
                                                            ga o endere?o do IS
                                                             para a porta J
  145 0000008E F04F 0100       MOV              R1, #2_00   ;Por Borda  
  146 00000092 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador
  147 00000094         ; 10. Configurar  borda ?nica no registrador IBE
  148 00000094 4834            LDR              R0, =GPIO_PORTJ_AHB_IBE_R ;Carr
                                                            ega o endere?o do I
                                                            BE para a porta J
  149 00000096 F04F 0100       MOV              R1, #2_00   ;Borda ?nica  
  150 0000009A 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador
  151 0000009C         ; 11. Configurar  borda de descida (bot?o pressionado) n
                       o registrador IEV
  152 0000009C 4833            LDR              R0, =GPIO_PORTJ_AHB_IEV_R ;Carr
                                                            ega o endere?o do I
                                                            EV para a porta J
  153 0000009E F04F 0100       MOV              R1, #2_00   ;Borda ?nica Descid
                                                            a nos 2 bits 
  154 000000A2 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador
  155 000000A4         ; 12. Configurar  borda de descida (bot?o pressionado) n
                       o registrador IEV



ARM Macro Assembler    Page 7 


  156 000000A4 4831            LDR              R0, =GPIO_PORTJ_AHB_IEV_R ;Carr
                                                            ega o endere?o do I
                                                            EV para a porta J
  157 000000A6 F04F 0102       MOV              R1, #2_10   ;Borda ?nica Descid
                                                            a e Subida 
  158 000000AA 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador    
  159 000000AC         ; 13. Habilitar a interrup??o no registrador IM
  160 000000AC 482C            LDR              R0, =GPIO_PORTJ_AHB_IM_R ;Carre
                                                            ga o endere?o do IM
                                                             para a porta J
  161 000000AE F04F 0101       MOV              R1, #2_01   ;Habilitar as inter
                                                            rup??es nos bit 0 e
                                                             bit 1 
  162 000000B2 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador
  163 000000B4         ;Interrup??o n?mero 51            
  164 000000B4         ; 14. Setar a prioridade no NVIC
  165 000000B4 482E            LDR              R0, =NVIC_PRI12_R ;Carrega o do
                                                             NVIC para o grupo 
                                                            que tem o J entre 5
                                                            1 e 48
  166 000000B6 F04F 4120       MOV              R1, #0xA0000000 ;Prioridade 5  
                                                                   
  167 000000BA 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador da mem?ria
  168 000000BC         ; 15. Habilitar a interrup??o no NVIC
  169 000000BC 482D            LDR              R0, =NVIC_EN1_R ;Carrega o do N
                                                            VIC para o grupo qu
                                                            e tem o J entre 63 
                                                            e 32
  170 000000BE F44F 2100       MOV              R1, #0x80000
  171 000000C2 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador da mem?ria
  172 000000C4         ; 16. Habilitar a chave geral das interrup??es
  173 000000C4 B500            PUSH             {LR}
  174 000000C6 F7FF FFFE       BL               EnableInterrupts
  175 000000CA F85D EB04       POP              {LR}
  176 000000CE         
  177 000000CE 4770            BX               LR
  178 000000D0         
  179 000000D0         ;#######################################################
                       #########################
  180 000000D0         ; Função PortN_Output
  181 000000D0         ; Parâmetro de entrada: R0 --> se os BIT1 e BIT0 estão l
                       igado ou desligado
  182 000000D0         ; Parâmetro de saída: Não tem
  183 000000D0         ;#######################################################
                       #########################
  184 000000D0         PortN_Output
  185 000000D0 4929            LDR              R1, =GPIO_PORTN_AHB_DATA_BITS_R
 
                                                            ;Carrega o valor do
                                                             offset do data reg
                                                            ister
  186 000000D2 F101 010C       ADD              R1, #0x0C   ;Soma ao offset o e
                                                            ndereço do bit 1 pa
                                                            ra ser 
  187 000000D6         ;uma escrita amigável



ARM Macro Assembler    Page 8 


  188 000000D6 6008            STR              R0, [R1]    ;Escreve no barrame
                                                            nto de dados na por
                                                            ta N1 somente
  189 000000D8 4770            BX               LR          ;Retorno
  190 000000DA         
  191 000000DA         ;#######################################################
                       #########################
  192 000000DA         ; Função PortN_Inverte0
  193 000000DA         ; Parâmetro de entrada: R1 --> se o BIT1 está ligado ou 
                       desligado
  194 000000DA         ; Parâmetro de saída: Não tem
  195 000000DA         ;#######################################################
                       #########################
  196 000000DA         PortN_Invertepino0
  197 000000DA B500            PUSH             {LR}
  198 000000DC 4926            LDR              R1, =GPIO_PORTN_AHB_DATA_BITS_R
 
                                                            ;Carrega o valor do
                                                             offset do data reg
                                                            ister
  199 000000DE F101 0104       ADD              R1, #0x04   ;Soma ao offset o e
                                                            ndereço do bit 1 pa
                                                            ra ser 
  200 000000E2         ;uma leitura e escrita amigável
  201 000000E2 6808            LDR              R0, [R1]    ;Carrega o valor at
                                                            ual para inverter
  202 000000E4 F080 0001       EOR              R0, R0, #1  ;Inverte o bit 0
  203 000000E8 6008            STR              R0, [R1]    ;Escreve no barrame
                                                            nto de dados na por
                                                            ta N0 somente
  204 000000EA BD00            POP              {PC}        ;Retorno 
  205 000000EC         
  206 000000EC         
  207 000000EC         ;#######################################################
                       #########################
  208 000000EC         ; Função PortN_Inverte1
  209 000000EC         ; Parâmetro de entrada: R1 --> se o BIT1 está ligado ou 
                       desligado
  210 000000EC         ; Parâmetro de saída: Não tem
  211 000000EC         ;#######################################################
                       #########################
  212 000000EC         PortN_Invertepino1
  213 000000EC B500            PUSH             {LR}
  214 000000EE 4922            LDR              R1, =GPIO_PORTN_AHB_DATA_BITS_R
 
                                                            ;Carrega o valor do
                                                             offset do data reg
                                                            ister
  215 000000F0 F101 0108       ADD              R1, #0x08   ;Soma ao offset o e
                                                            ndereço do bit 1 pa
                                                            ra ser 
  216 000000F4         ;uma leitura e escrita amigável
  217 000000F4 6808            LDR              R0, [R1]    ;Carrega o valor at
                                                            ual para inverter
  218 000000F6 F080 0002       EOR              R0, R0, #2  ;Inverte o bit 0
  219 000000FA 6008            STR              R0, [R1]    ;Escreve no barrame
                                                            nto de dados na por
                                                            ta N0 somente
  220 000000FC BD00            POP              {PC}        ;Retorno



ARM Macro Assembler    Page 9 


  221 000000FE         
  222 000000FE         ;#######################################################
                       #########################
  223 000000FE         ; Função PortJ_Input
  224 000000FE         ; Parâmetro de entrada: Não tem
  225 000000FE         ; Parâmetro de saída: R0 --> o valor da leitura
  226 000000FE         ;#######################################################
                       #########################
  227 000000FE         PortJ_Input
  228 000000FE 491F            LDR              R1, =GPIO_PORTJ_AHB_DATA_BITS_R
 
                                                            ;Carrega o valor do
                                                             offset do data reg
                                                            ister
  229 00000100 F101 010C       ADD              R1, #0x0C   ;Soma ao offset o e
                                                            ndereço dos bit 0 e
                                                             1 para 
  230 00000104         ;serem os únicos a serem lidos tem uma leitura amigável
  231 00000104 6808            LDR              R0, [R1]    ;Lê no barramento d
                                                            e dados nos pinos J
                                                            0 e J1 somente
  232 00000106 4770            BX               LR          ;Retorno
  233 00000108         
  234 00000108         ;#######################################################
                       #########################
  235 00000108         ; Fun??o ISR GPIOPortJ_Handler (Tratamento da interrup??
                       o)
  236 00000108         ; Par?metro de entrada: N?o tem
  237 00000108         ; Par?metro de sa?da: R5 [J1-J0] e R4=flag de passagem p
                       ela interrup??o
  238 00000108         ;#######################################################
                       #########################
  239 00000108         GPIOPortJ_Handler
  240 00000108         
  241 00000108 B403            PUSH             {R0, R1}
  242 0000010A         
  243 0000010A         ; rotina de ack
  244 0000010A 491D            LDR              R1, =GPIO_PORTJ_AHB_ICR_R ;Bdr 
                                                            descida e bit Bdr s
                                                            ubida
  245 0000010C F04F 0003       MOV              R0, #2_11   ;Fazendo o ACK do b
                                                            it 0 ou do bit 1 do
                                                             PortJ
  246 00000110 6008            STR              R0, [R1]    ;limpando a interru
                                                            p??o (ack)
  247 00000112         
  248 00000112 491C            LDR              R1, =TIMER2_CTL_R ;Carrega o en
                                                            dereço do CTL para 
                                                            poder desabilitar
  249 00000114 680A            LDR              R2, [R1]    ;lê o conteúdo do r
                                                            egistrador e coloca
                                                             em R2 para fazer o
                                                             OR abaixo
  250 00000116 F082 0201       EOR              R2, R2, #2_1 ;escrita amigável 
                                                                          
  251 0000011A 600A            STR              R2, [R1]    ;atualiza o registr
                                                            ador
  252 0000011C         
  253 0000011C 491A            LDR              R1, =TIMER0_CTL_R ;Carrega o en



ARM Macro Assembler    Page 10 


                                                            dereço do CTL para 
                                                            poder desabilitar
  254 0000011E 680A            LDR              R2, [R1]    ;lê o conteúdo do r
                                                            egistrador e coloca
                                                             em R2 para fazer o
                                                             OR abaixo
  255 00000120 F082 0201       EOR              R2, R2, #2_1 ;escrita amigável 
                                                                          
  256 00000124 600A            STR              R2, [R1]    ;atualiza o registr
                                                            ador
  257 00000126         
  258 00000126 BC03            POP              {R0, R1}
  259 00000128 4770            BX               LR
  260 0000012A         
  261 0000012A 00 00           ALIGN                        ; garante que o fim
                                                             da seção está alin
                                                            hada 
  262 0000012C                 END                          ; fim do arquivo
              400FE608 
              400FEA08 
              40060528 
              40064528 
              4006052C 
              4006452C 
              40064400 
              40060400 
              40064420 
              40060420 
              4006451C 
              4006051C 
              40060510 
              40060410 
              40060404 
              40060408 
              4006040C 
              E000E430 
              E000E104 
              40064000 
              40060000 
              4006041C 
              4003200C 
              4003000C 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\gpio.d -o.\objects\gpio.o -IC:\Users\Usuario\AppDa
ta\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 -IC:\Keil_v5\ARM\
CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 5
36" --predefine="TM4C1294NCPDT SETA 1" --list=.\listings\gpio.lst gpio.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 57 in file gpio.s
   Uses
      None
Comment: .text unused
EsperaGPIO 0000000E

Symbol: EsperaGPIO
   Definitions
      At line 85 in file gpio.s
   Uses
      At line 90 in file gpio.s
Comment: EsperaGPIO used once
GPIOPortJ_Handler 00000108

Symbol: GPIOPortJ_Handler
   Definitions
      At line 239 in file gpio.s
   Uses
      At line 66 in file gpio.s
Comment: GPIOPortJ_Handler used once
GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 75 in file gpio.s
   Uses
      At line 60 in file gpio.s
Comment: GPIO_Init used once
PortJ_Input 000000FE

Symbol: PortJ_Input
   Definitions
      At line 227 in file gpio.s
   Uses
      At line 62 in file gpio.s
Comment: PortJ_Input used once
PortN_Invertepino0 000000DA

Symbol: PortN_Invertepino0
   Definitions
      At line 196 in file gpio.s
   Uses
      At line 63 in file gpio.s
Comment: PortN_Invertepino0 used once
PortN_Invertepino1 000000EC

Symbol: PortN_Invertepino1
   Definitions
      At line 212 in file gpio.s
   Uses
      At line 64 in file gpio.s
Comment: PortN_Invertepino1 used once
PortN_Output 000000D0

Symbol: PortN_Output



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 184 in file gpio.s
   Uses
      At line 61 in file gpio.s
Comment: PortN_Output used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BIT0 00000001

Symbol: BIT0
   Definitions
      At line 12 in file gpio.s
   Uses
      At line 105 in file gpio.s
      At line 122 in file gpio.s
      At line 128 in file gpio.s
      At line 134 in file gpio.s

BIT1 00000002

Symbol: BIT1
   Definitions
      At line 13 in file gpio.s
   Uses
      At line 106 in file gpio.s
      At line 123 in file gpio.s
      At line 129 in file gpio.s
      At line 135 in file gpio.s

GPIO_PORTJ 00000100

Symbol: GPIO_PORTJ
   Definitions
      At line 37 in file gpio.s
   Uses
      At line 81 in file gpio.s
      At line 88 in file gpio.s

GPIO_PORTJ_AHB_AFSEL_R 40060420

Symbol: GPIO_PORTJ_AHB_AFSEL_R
   Definitions
      At line 32 in file gpio.s
   Uses
      At line 117 in file gpio.s
Comment: GPIO_PORTJ_AHB_AFSEL_R used once
GPIO_PORTJ_AHB_AMSEL_R 40060528

Symbol: GPIO_PORTJ_AHB_AMSEL_R
   Definitions
      At line 29 in file gpio.s
   Uses
      At line 93 in file gpio.s
Comment: GPIO_PORTJ_AHB_AMSEL_R used once
GPIO_PORTJ_AHB_CR_R 40060524

Symbol: GPIO_PORTJ_AHB_CR_R
   Definitions
      At line 28 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_CR_R unused
GPIO_PORTJ_AHB_DATA_BITS_R 40060000

Symbol: GPIO_PORTJ_AHB_DATA_BITS_R
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 36 in file gpio.s
   Uses
      At line 228 in file gpio.s
Comment: GPIO_PORTJ_AHB_DATA_BITS_R used once
GPIO_PORTJ_AHB_DATA_R 400603FC

Symbol: GPIO_PORTJ_AHB_DATA_R
   Definitions
      At line 35 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_DATA_R unused
GPIO_PORTJ_AHB_DEN_R 4006051C

Symbol: GPIO_PORTJ_AHB_DEN_R
   Definitions
      At line 33 in file gpio.s
   Uses
      At line 126 in file gpio.s
Comment: GPIO_PORTJ_AHB_DEN_R used once
GPIO_PORTJ_AHB_DIR_R 40060400

Symbol: GPIO_PORTJ_AHB_DIR_R
   Definitions
      At line 31 in file gpio.s
   Uses
      At line 109 in file gpio.s
Comment: GPIO_PORTJ_AHB_DIR_R used once
GPIO_PORTJ_AHB_IBE_R 40060408

Symbol: GPIO_PORTJ_AHB_IBE_R
   Definitions
      At line 22 in file gpio.s
   Uses
      At line 148 in file gpio.s
Comment: GPIO_PORTJ_AHB_IBE_R used once
GPIO_PORTJ_AHB_ICR_R 4006041C

Symbol: GPIO_PORTJ_AHB_ICR_R
   Definitions
      At line 26 in file gpio.s
   Uses
      At line 244 in file gpio.s
Comment: GPIO_PORTJ_AHB_ICR_R used once
GPIO_PORTJ_AHB_IEV_R 4006040C

Symbol: GPIO_PORTJ_AHB_IEV_R
   Definitions
      At line 23 in file gpio.s
   Uses
      At line 152 in file gpio.s
      At line 156 in file gpio.s

GPIO_PORTJ_AHB_IM_R 40060410

Symbol: GPIO_PORTJ_AHB_IM_R
   Definitions
      At line 24 in file gpio.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 140 in file gpio.s
      At line 160 in file gpio.s

GPIO_PORTJ_AHB_IS_R 40060404

Symbol: GPIO_PORTJ_AHB_IS_R
   Definitions
      At line 21 in file gpio.s
   Uses
      At line 144 in file gpio.s
Comment: GPIO_PORTJ_AHB_IS_R used once
GPIO_PORTJ_AHB_LOCK_R 40060520

Symbol: GPIO_PORTJ_AHB_LOCK_R
   Definitions
      At line 27 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_LOCK_R unused
GPIO_PORTJ_AHB_PCTL_R 4006052C

Symbol: GPIO_PORTJ_AHB_PCTL_R
   Definitions
      At line 30 in file gpio.s
   Uses
      At line 99 in file gpio.s
Comment: GPIO_PORTJ_AHB_PCTL_R used once
GPIO_PORTJ_AHB_PUR_R 40060510

Symbol: GPIO_PORTJ_AHB_PUR_R
   Definitions
      At line 34 in file gpio.s
   Uses
      At line 133 in file gpio.s
Comment: GPIO_PORTJ_AHB_PUR_R used once
GPIO_PORTJ_AHB_RIS_R 40060414

Symbol: GPIO_PORTJ_AHB_RIS_R
   Definitions
      At line 25 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_RIS_R unused
GPIO_PORTN 00001000

Symbol: GPIO_PORTN
   Definitions
      At line 49 in file gpio.s
   Uses
      At line 80 in file gpio.s
      At line 87 in file gpio.s

GPIO_PORTN_AHB_AFSEL_R 40064420

Symbol: GPIO_PORTN_AHB_AFSEL_R
   Definitions
      At line 44 in file gpio.s
   Uses
      At line 115 in file gpio.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

Comment: GPIO_PORTN_AHB_AFSEL_R used once
GPIO_PORTN_AHB_AMSEL_R 40064528

Symbol: GPIO_PORTN_AHB_AMSEL_R
   Definitions
      At line 41 in file gpio.s
   Uses
      At line 95 in file gpio.s
Comment: GPIO_PORTN_AHB_AMSEL_R used once
GPIO_PORTN_AHB_CR_R 40064524

Symbol: GPIO_PORTN_AHB_CR_R
   Definitions
      At line 40 in file gpio.s
   Uses
      None
Comment: GPIO_PORTN_AHB_CR_R unused
GPIO_PORTN_AHB_DATA_BITS_R 40064000

Symbol: GPIO_PORTN_AHB_DATA_BITS_R
   Definitions
      At line 48 in file gpio.s
   Uses
      At line 185 in file gpio.s
      At line 198 in file gpio.s
      At line 214 in file gpio.s

GPIO_PORTN_AHB_DATA_R 400643FC

Symbol: GPIO_PORTN_AHB_DATA_R
   Definitions
      At line 47 in file gpio.s
   Uses
      None
Comment: GPIO_PORTN_AHB_DATA_R unused
GPIO_PORTN_AHB_DEN_R 4006451C

Symbol: GPIO_PORTN_AHB_DEN_R
   Definitions
      At line 45 in file gpio.s
   Uses
      At line 120 in file gpio.s
Comment: GPIO_PORTN_AHB_DEN_R used once
GPIO_PORTN_AHB_DIR_R 40064400

Symbol: GPIO_PORTN_AHB_DIR_R
   Definitions
      At line 43 in file gpio.s
   Uses
      At line 104 in file gpio.s
Comment: GPIO_PORTN_AHB_DIR_R used once
GPIO_PORTN_AHB_LOCK_R 40064520

Symbol: GPIO_PORTN_AHB_LOCK_R
   Definitions
      At line 39 in file gpio.s
   Uses
      None
Comment: GPIO_PORTN_AHB_LOCK_R unused



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTN_AHB_PCTL_R 4006452C

Symbol: GPIO_PORTN_AHB_PCTL_R
   Definitions
      At line 42 in file gpio.s
   Uses
      At line 101 in file gpio.s
Comment: GPIO_PORTN_AHB_PCTL_R used once
GPIO_PORTN_AHB_PUR_R 40064510

Symbol: GPIO_PORTN_AHB_PUR_R
   Definitions
      At line 46 in file gpio.s
   Uses
      None
Comment: GPIO_PORTN_AHB_PUR_R unused
NVIC_EN1_R E000E104

Symbol: NVIC_EN1_R
   Definitions
      At line 18 in file gpio.s
   Uses
      At line 169 in file gpio.s
Comment: NVIC_EN1_R used once
NVIC_PRI12_R E000E430

Symbol: NVIC_PRI12_R
   Definitions
      At line 19 in file gpio.s
   Uses
      At line 165 in file gpio.s
Comment: NVIC_PRI12_R used once
SYSCTL_PRGPIO_R 400FEA08

Symbol: SYSCTL_PRGPIO_R
   Definitions
      At line 16 in file gpio.s
   Uses
      At line 84 in file gpio.s
Comment: SYSCTL_PRGPIO_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 15 in file gpio.s
   Uses
      At line 79 in file gpio.s
Comment: SYSCTL_RCGCGPIO_R used once
TIMER0_CTL_R 4003000C

Symbol: TIMER0_CTL_R
   Definitions
      At line 52 in file gpio.s
   Uses
      At line 253 in file gpio.s
Comment: TIMER0_CTL_R used once
TIMER2_CTL_R 4003200C

Symbol: TIMER2_CTL_R



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 51 in file gpio.s
   Uses
      At line 248 in file gpio.s
Comment: TIMER2_CTL_R used once
36 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

DisableInterrupts 00000000

Symbol: DisableInterrupts
   Definitions
      At line 68 in file gpio.s
   Uses
      None
Comment: DisableInterrupts unused
EnableInterrupts 00000000

Symbol: EnableInterrupts
   Definitions
      At line 67 in file gpio.s
   Uses
      At line 174 in file gpio.s
Comment: EnableInterrupts used once
2 symbols
382 symbols in table
