


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Ex. timer2 contando 700ms 1x com interrupção
    4 00000000         ; Prof. Guilherme de S. Peron - 12/03/2018
    5 00000000         ; Prof. Marcos E. P. Monteiro - 12/03/2018
    6 00000000         ; Prof. DaLuz             - 25/02/2022
    7 00000000         
    8 00000000         ;#######################################################
                       #########################
    9 00000000         ; Configurar o timer0 para alternar um led a cada 500ms 
                       com IRQ. Modo: periódico
   10 00000000         ; Configurar o timer2 para ascender um led após 700ms ap
                       enas uma vez com IRQ
   11 00000000         ; Modo: One Shot
   12 00000000         ;#######################################################
                       #########################
   13 00000000         
   14 00000000         ;#######################################################
                       #########################
   15 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   16 00000000         ;#######################################################
                       #########################
   17 00000000         
   18 00000000         ; Definições de Valores
   19 00000000 00000001 
                       BIT0    EQU              2_0001
   20 00000000 00000002 
                       BIT1    EQU              2_0010
   21 00000000         ;#######################################################
                       #########################
   22 00000000         ; Área de Dados - Declarações de variáveis
   23 00000000                 AREA             DATA, ALIGN=2
   24 00000000         ; Se alguma variável for chamada em outro arquivo
   25 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   26 00000000         ; partir de outro arquivo
   27 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   28 00000000         ; de <tam> bytes a partir da primeira 
   29 00000000         ; posição da RAM  
   30 00000000         
   31 00000000         ;#######################################################
                       #########################
   32 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   33 00000000         ;                  código
   34 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   35 00000000         
   36 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   37 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   38 00000000         ; outro arquivo. No caso startup.s
   39 00000000         ; Se chamar alguma função externa 
   40 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 



ARM Macro Assembler    Page 2 


   41 00000000         ; função <func>
   42 00000000                 IMPORT           PLL_Init
   43 00000000                 IMPORT           SysTick_Init
   44 00000000                 IMPORT           SysTick_Wait1ms
   45 00000000                 IMPORT           GPIO_Init
   46 00000000                 IMPORT           PortN_Output
   47 00000000                 IMPORT           PortJ_Input
   48 00000000                 IMPORT           Timer0A_Init
   49 00000000                 IMPORT           Timer2A_Init
   50 00000000         ;#######################################################
                       #########################
   51 00000000         ; Função main()
   52 00000000         Start
   53 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   54 00000004 F7FF FFFE       BL               SysTick_Init
   55 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   56 0000000C         
   57 0000000C 4803            LDR              R0, =36000000 ;Carrega o R0 com
                                                            o parâmetro de entr
                                                            ada para o timer es
                                                            tourar a 450ms peri
                                                            ódico
   58 0000000E F7FF FFFE       BL               Timer0A_Init
   59 00000012         
   60 00000012 4803            LDR              R0, =60000000 ;Carrega o R0 com
                                                            o parâmetro de entr
                                                            ada para o timer es
                                                            tourar após 750ms o
                                                            ne shot
   61 00000014 F7FF FFFE       BL               Timer2A_Init
   62 00000018         
   63 00000018         MainLoop
   64 00000018 E7FE            B                MainLoop    ;Volta para o laço 
                                                            principal
   65 0000001A         
   66 0000001A 00 00           ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
   67 0000001C                 END                          ;Fim do arquivo
              02255100 
              03938700 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\Usuario\AppDa
ta\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 -IC:\Keil_v5\ARM\
CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 5
36" --predefine="TM4C1294NCPDT SETA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 23 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 34 in file main.s
   Uses
      None
Comment: .text unused
MainLoop 00000018

Symbol: MainLoop
   Definitions
      At line 63 in file main.s
   Uses
      At line 64 in file main.s
Comment: MainLoop used once
Start 00000000

Symbol: Start
   Definitions
      At line 52 in file main.s
   Uses
      At line 37 in file main.s
Comment: Start used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BIT0 00000001

Symbol: BIT0
   Definitions
      At line 19 in file main.s
   Uses
      None
Comment: BIT0 unused
BIT1 00000002

Symbol: BIT1
   Definitions
      At line 20 in file main.s
   Uses
      None
Comment: BIT1 unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 45 in file main.s
   Uses
      At line 55 in file main.s
Comment: GPIO_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 42 in file main.s
   Uses
      At line 53 in file main.s
Comment: PLL_Init used once
PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 47 in file main.s
   Uses
      None
Comment: PortJ_Input unused
PortN_Output 00000000

Symbol: PortN_Output
   Definitions
      At line 46 in file main.s
   Uses
      None
Comment: PortN_Output unused
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 43 in file main.s
   Uses
      At line 54 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 44 in file main.s
   Uses
      None
Comment: SysTick_Wait1ms unused
Timer0A_Init 00000000

Symbol: Timer0A_Init
   Definitions
      At line 48 in file main.s
   Uses
      At line 58 in file main.s
Comment: Timer0A_Init used once
Timer2A_Init 00000000

Symbol: Timer2A_Init



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 49 in file main.s
   Uses
      At line 61 in file main.s
Comment: Timer2A_Init used once
8 symbols
350 symbols in table
